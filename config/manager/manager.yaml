apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
  labels:
    app: s2i-metrics
    control-plane: s2i-controller-manager
    controller-tools.k8s.io: "1.0"
  name: s2ioperator-metrics-service
  namespace: kubesphere-devops-system
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: s2ioperator
  namespace: kubesphere-devops-system
  labels:
    control-plane: s2ioperator
    controller-tools.k8s.io: "1.0"
spec:
  selector:
    matchLabels:
      control-plane: s2i-controller-manager
      controller-tools.k8s.io: "1.0"
  serviceName: s2ioperator
  template:
    metadata:
      labels:
        control-plane: s2i-controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - command:
        - /manager
        image: controller:latest
        imagePullPolicy: Always
        name: manager
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: S2IIMAGENAME
            value: kubespheredev/s2irun:v0.0.3
        resources:
          limits:
            cpu: 100m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: s2i-webhook-server-cert
